[INF:CM0023] Creating log file "${SURELOG_DIR}/build/regression/ModPortTest/slpp_unit/surelog.log".
[INF:CM0020] Separate compilation-unit mode is on.
PP PREPROCESS FILE: ${SURELOG_DIR}/tests/ModPortTest/top.v
PP TOKENS: 
[@0,0:5='module',<56>,1:0]
[@1,6:6=' ',<74>,1:6]
[@2,7:15='dff0_test',<73>,1:7]
[@3,16:16='(',<89>,1:16]
[@4,17:18='n1',<73>,1:17]
[@5,19:19=')',<90>,1:19]
[@6,20:20=';',<95>,1:20]
[@7,21:21='\n',<82>,1:21]
[@8,22:23='  ',<74>,2:0]
[@9,24:24='(',<89>,2:2]
[@10,25:25='*',<95>,2:3]
[@11,26:26=' ',<74>,2:4]
[@12,27:30='init',<73>,2:5]
[@13,31:31=' ',<74>,2:9]
[@14,32:32='=',<87>,2:10]
[@15,33:33=' ',<74>,2:11]
[@16,34:38='32'd1',<78>,2:12]
[@17,39:39=' ',<74>,2:17]
[@18,40:40='*',<95>,2:18]
[@19,41:41=')',<90>,2:19]
[@20,42:42='\n',<82>,2:20]
[@21,43:44='  ',<74>,3:0]
[@22,45:50='output',<73>,3:2]
[@23,51:51=' ',<74>,3:8]
[@24,52:53='n1',<73>,3:9]
[@25,54:54=';',<95>,3:11]
[@26,55:55='\n',<82>,3:12]
[@27,56:57='  ',<74>,4:0]
[@28,58:60='reg',<73>,4:2]
[@29,61:61=' ',<74>,4:5]
[@30,62:63='n1',<73>,4:6]
[@31,64:64=' ',<74>,4:8]
[@32,65:65='=',<87>,4:9]
[@33,66:66=' ',<74>,4:10]
[@34,67:71='32'd0',<78>,4:11]
[@35,72:72=';',<95>,4:16]
[@36,73:73='\n',<82>,4:17]
[@37,74:82='endmodule',<57>,5:0]
[@38,83:83='\n',<82>,5:9]
[@39,84:84='\n',<82>,6:0]
[@40,85:85='\n',<82>,7:0]
[@41,86:94='interface',<58>,8:0]
[@42,95:95=' ',<74>,8:9]
[@43,96:102='AXI_BUS',<73>,8:10]
[@44,103:103=' ',<74>,8:17]
[@45,104:104='#',<95>,8:18]
[@46,105:105='(',<89>,8:19]
[@47,106:106='\n',<82>,8:20]
[@48,107:107=' ',<74>,9:0]
[@49,108:116='parameter',<73>,9:1]
[@50,117:117=' ',<74>,9:10]
[@51,118:129='AXI_ID_WIDTH',<73>,9:11]
[@52,130:132='   ',<74>,9:23]
[@53,133:133='=',<87>,9:26]
[@54,134:134=' ',<74>,9:27]
[@55,135:135='-',<95>,9:28]
[@56,136:136='1',<78>,9:29]
[@57,137:137='\n',<82>,9:30]
[@58,138:138=')',<90>,10:0]
[@59,139:139=';',<95>,10:1]
[@60,140:140='\n',<82>,10:2]
[@61,141:141='\n',<82>,11:0]
[@62,142:143='  ',<74>,12:0]
[@63,144:150='typedef',<73>,12:2]
[@64,151:151=' ',<74>,12:9]
[@65,152:156='logic',<73>,12:10]
[@66,157:157=' ',<74>,12:15]
[@67,158:158='[',<93>,12:16]
[@68,159:170='AXI_ID_WIDTH',<73>,12:17]
[@69,171:171='-',<95>,12:29]
[@70,172:172='1',<78>,12:30]
[@71,173:173=':',<95>,12:31]
[@72,174:174='0',<78>,12:32]
[@73,175:175=']',<94>,12:33]
[@74,176:178='   ',<74>,12:34]
[@75,179:182='id_t',<73>,12:37]
[@76,183:183=';',<95>,12:41]
[@77,184:184='\n',<82>,12:42]
[@78,185:186='  ',<74>,13:0]
[@79,187:187='\n',<82>,13:2]
[@80,188:189='  ',<74>,14:0]
[@81,190:194='id_t1',<73>,14:2]
[@82,195:201='       ',<74>,14:7]
[@83,202:206='aw_id',<73>,14:14]
[@84,207:207=';',<95>,14:19]
[@85,208:208='\n',<82>,14:20]
[@86,209:211='   ',<74>,15:0]
[@87,212:212='\n',<82>,15:3]
[@88,213:214='  ',<74>,16:0]
[@89,215:221='modport',<73>,16:2]
[@90,222:222=' ',<74>,16:9]
[@91,223:228='Master',<73>,16:10]
[@92,229:229=' ',<74>,16:16]
[@93,230:230='(',<89>,16:17]
[@94,231:231='\n',<82>,16:18]
[@95,232:235='    ',<74>,17:0]
[@96,236:241='output',<73>,17:4]
[@97,242:242=' ',<74>,17:10]
[@98,243:247='aw_id',<73>,17:11]
[@99,248:248='\n',<82>,17:16]
[@100,249:250='  ',<74>,18:0]
[@101,251:251=')',<90>,18:2]
[@102,252:252=';',<95>,18:3]
[@103,253:253='\n',<82>,18:4]
[@104,254:254='\n',<82>,19:0]
[@105,255:256='  ',<74>,20:0]
[@106,257:260='id_t',<73>,20:2]
[@107,261:267='       ',<74>,20:6]
[@108,268:272='rw_id',<73>,20:13]
[@109,273:273=';',<95>,20:18]
[@110,274:274='\n',<82>,20:19]
[@111,275:277='   ',<74>,21:0]
[@112,278:278='\n',<82>,21:3]
[@113,279:280='  ',<74>,22:0]
[@114,281:287='modport',<73>,22:2]
[@115,288:288=' ',<74>,22:9]
[@116,289:293='Slave',<73>,22:10]
[@117,294:294=' ',<74>,22:15]
[@118,295:295='(',<89>,22:16]
[@119,296:296='\n',<82>,22:17]
[@120,297:300='    ',<74>,23:0]
[@121,301:306='output',<73>,23:4]
[@122,307:307=' ',<74>,23:10]
[@123,308:312='ww_id',<73>,23:11]
[@124,313:313='\n',<82>,23:16]
[@125,314:315='  ',<74>,24:0]
[@126,316:316=')',<90>,24:2]
[@127,317:317=';',<95>,24:3]
[@128,318:318='\n',<82>,24:4]
[@129,319:319='\n',<82>,25:0]
[@130,320:331='endinterface',<59>,26:0]
[@131,332:332='\n',<82>,26:12]
[@132,333:333='\n',<82>,27:0]
[@133,334:334='\n',<82>,28:0]
[@134,335:343='interface',<58>,29:0]
[@135,344:344=' ',<74>,29:9]
[@136,345:350='mem_if',<73>,29:10]
[@137,351:351=' ',<74>,29:16]
[@138,352:352='(',<89>,29:17]
[@139,353:357='input',<73>,29:18]
[@140,358:358=' ',<74>,29:23]
[@141,359:362='wire',<73>,29:24]
[@142,363:363=' ',<74>,29:28]
[@143,364:366='clk',<73>,29:29]
[@144,367:367=')',<90>,29:32]
[@145,368:368=';',<95>,29:33]
[@146,369:369='\n',<82>,29:34]
[@147,370:370='\n',<82>,30:0]
[@148,371:372='  ',<74>,31:0]
[@149,373:379='modport',<73>,31:2]
[@150,380:381='  ',<74>,31:9]
[@151,382:387='system',<73>,31:11]
[@152,388:388=' ',<74>,31:17]
[@153,389:389='(',<89>,31:18]
[@154,390:394='input',<73>,31:19]
[@155,395:395=' ',<74>,31:24]
[@156,396:398='clk',<73>,31:25]
[@157,399:399=')',<90>,31:28]
[@158,400:400=';',<95>,31:29]
[@159,401:401='\n',<82>,31:30]
[@160,402:403='  ',<74>,32:0]
[@161,404:410='modport',<73>,32:2]
[@162,411:412='  ',<74>,32:9]
[@163,413:418='memory',<73>,32:11]
[@164,419:419=' ',<74>,32:17]
[@165,420:420='(',<89>,32:18]
[@166,421:426='output',<73>,32:19]
[@167,427:427=' ',<74>,32:25]
[@168,428:430='clk',<73>,32:26]
[@169,431:431=')',<90>,32:29]
[@170,432:432=';',<95>,32:30]
[@171,433:433='\n',<82>,32:31]
[@172,434:434=' ',<74>,33:0]
[@173,435:435='\n',<82>,33:1]
[@174,436:447='endinterface',<59>,34:0]
[@175,448:448='\n',<82>,34:12]
[@176,449:449='\n',<82>,35:0]
[@177,450:455='module',<56>,36:0]
[@178,456:456=' ',<74>,36:6]
[@179,457:468='memory_ctrl1',<73>,36:7]
[@180,469:469=' ',<74>,36:19]
[@181,470:470='(',<89>,36:20]
[@182,471:476='mem_if',<73>,36:21]
[@183,477:477='.',<95>,36:27]
[@184,478:484='system1',<73>,36:28]
[@185,485:485=' ',<74>,36:35]
[@186,486:488='sif',<73>,36:36]
[@187,489:489=')',<90>,36:39]
[@188,490:490=';',<95>,36:40]
[@189,491:491='\n',<82>,36:41]
[@190,492:492='\n',<82>,37:0]
[@191,493:499='typedef',<73>,38:0]
[@192,500:501='  ',<74>,38:7]
[@193,502:505='enum',<73>,38:9]
[@194,506:506=' ',<74>,38:13]
[@195,507:507='{',<91>,38:14]
[@196,508:511='IDLE',<73>,38:15]
[@197,512:512=',',<86>,38:19]
[@198,513:517='WRITE',<73>,38:20]
[@199,518:518=',',<86>,38:25]
[@200,519:522='READ',<73>,38:26]
[@201,523:523=',',<86>,38:30]
[@202,524:527='DONE',<73>,38:31]
[@203,528:528='}',<92>,38:35]
[@204,529:529=' ',<74>,38:36]
[@205,530:534='fsm_t',<73>,38:37]
[@206,535:535=';',<95>,38:42]
[@207,536:536='\n',<82>,38:43]
[@208,537:537='\n',<82>,39:0]
[@209,538:542='fsm_t',<73>,40:0]
[@210,543:543=' ',<74>,40:5]
[@211,544:548='state',<73>,40:6]
[@212,549:549=';',<95>,40:11]
[@213,550:550='\n',<82>,40:12]
[@214,551:551='\n',<82>,41:0]
[@215,552:552='\n',<82>,42:0]
[@216,553:561='endmodule',<57>,43:0]
[@217,562:562='\n',<82>,43:9]
[@218,563:563='\n',<82>,44:0]
[@219,564:569='module',<56>,45:0]
[@220,570:570=' ',<74>,45:6]
[@221,571:582='memory_ctrl2',<73>,45:7]
[@222,583:583=' ',<74>,45:19]
[@223,584:584='(',<89>,45:20]
[@224,585:590='mem_if',<73>,45:21]
[@225,591:591='.',<95>,45:27]
[@226,592:597='system',<73>,45:28]
[@227,598:598=' ',<74>,45:34]
[@228,599:601='sif',<73>,45:35]
[@229,602:602=')',<90>,45:38]
[@230,603:603=';',<95>,45:39]
[@231,604:604='\n',<82>,45:40]
[@232,605:605='\n',<82>,46:0]
[@233,606:612='typedef',<73>,47:0]
[@234,613:614='  ',<74>,47:7]
[@235,615:618='enum',<73>,47:9]
[@236,619:619=' ',<74>,47:13]
[@237,620:620='{',<91>,47:14]
[@238,621:624='IDLE',<73>,47:15]
[@239,625:625=',',<86>,47:19]
[@240,626:630='WRITE',<73>,47:20]
[@241,631:631=',',<86>,47:25]
[@242,632:635='READ',<73>,47:26]
[@243,636:636=',',<86>,47:30]
[@244,637:640='DONE',<73>,47:31]
[@245,641:641='}',<92>,47:35]
[@246,642:642=' ',<74>,47:36]
[@247,643:647='fsm_t',<73>,47:37]
[@248,648:648=';',<95>,47:42]
[@249,649:649='\n',<82>,47:43]
[@250,650:650='\n',<82>,48:0]
[@251,651:655='fsm_t',<73>,49:0]
[@252,656:656=' ',<74>,49:5]
[@253,657:661='state',<73>,49:6]
[@254,662:662=';',<95>,49:11]
[@255,663:663='\n',<82>,49:12]
[@256,664:664='\n',<82>,50:0]
[@257,665:666='DD',<73>,51:0]
[@258,667:667=' ',<74>,51:2]
[@259,668:668='t',<73>,51:3]
[@260,669:669=';',<95>,51:4]
[@261,670:670='\n',<82>,51:5]
[@262,671:671='\n',<82>,52:0]
[@263,672:680='endmodule',<57>,53:0]
[@264,681:681='\n',<82>,53:9]
[@265,682:682='\n',<82>,54:0]
[@266,683:683='\n',<82>,55:0]
[@267,684:683='<EOF>',<-1>,56:0]
PP TREE: (top_level_rule null_rule (source_text (description (module module)) (description (text_blob  )) (description (text_blob dff0_test)) (description (text_blob ()) (description (text_blob n1)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob ()) (description (text_blob *)) (description (text_blob  )) (description (text_blob init)) (description (text_blob  )) (description (text_blob =)) (description (text_blob  )) (description (integral_number 32'd1)) (description (text_blob  )) (description (text_blob *)) (description (text_blob ))) (description (text_blob \n)) (description (text_blob   )) (description (text_blob output)) (description (text_blob  )) (description (text_blob n1)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob reg)) (description (text_blob  )) (description (text_blob n1)) (description (text_blob  )) (description (text_blob =)) (description (text_blob  )) (description (integral_number 32'd0)) (description (text_blob ;)) (description (text_blob \n)) (description (endmodule endmodule)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob \n)) (description (sv_interface interface)) (description (text_blob  )) (description (text_blob AXI_BUS)) (description (text_blob  )) (description (text_blob #)) (description (text_blob ()) (description (text_blob \n)) (description (text_blob  )) (description (text_blob parameter)) (description (text_blob  )) (description (text_blob AXI_ID_WIDTH)) (description (text_blob    )) (description (text_blob =)) (description (text_blob  )) (description (text_blob -)) (description (integral_number 1)) (description (text_blob \n)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob typedef)) (description (text_blob  )) (description (text_blob logic)) (description (text_blob  )) (description (text_blob [)) (description (text_blob AXI_ID_WIDTH)) (description (text_blob -)) (description (integral_number 1)) (description (text_blob :)) (description (integral_number 0)) (description (text_blob ])) (description (text_blob    )) (description (text_blob id_t)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob \n)) (description (text_blob   )) (description (text_blob id_t1)) (description (text_blob        )) (description (text_blob aw_id)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob    )) (description (text_blob \n)) (description (text_blob   )) (description (text_blob modport)) (description (text_blob  )) (description (text_blob Master)) (description (text_blob  )) (description (text_blob ()) (description (text_blob \n)) (description (text_blob     )) (description (text_blob output)) (description (text_blob  )) (description (text_blob aw_id)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob id_t)) (description (text_blob        )) (description (text_blob rw_id)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob    )) (description (text_blob \n)) (description (text_blob   )) (description (text_blob modport)) (description (text_blob  )) (description (text_blob Slave)) (description (text_blob  )) (description (text_blob ()) (description (text_blob \n)) (description (text_blob     )) (description (text_blob output)) (description (text_blob  )) (description (text_blob ww_id)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (endinterface endinterface)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob \n)) (description (sv_interface interface)) (description (text_blob  )) (description (text_blob mem_if)) (description (text_blob  )) (description (text_blob ()) (description (text_blob input)) (description (text_blob  )) (description (text_blob wire)) (description (text_blob  )) (description (text_blob clk)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob modport)) (description (text_blob   )) (description (text_blob system)) (description (text_blob  )) (description (text_blob ()) (description (text_blob input)) (description (text_blob  )) (description (text_blob clk)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob modport)) (description (text_blob   )) (description (text_blob memory)) (description (text_blob  )) (description (text_blob ()) (description (text_blob output)) (description (text_blob  )) (description (text_blob clk)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob  )) (description (text_blob \n)) (description (endinterface endinterface)) (description (text_blob \n)) (description (text_blob \n)) (description (module module)) (description (text_blob  )) (description (text_blob memory_ctrl1)) (description (text_blob  )) (description (text_blob ()) (description (text_blob mem_if)) (description (text_blob .)) (description (text_blob system1)) (description (text_blob  )) (description (text_blob sif)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob typedef)) (description (text_blob   )) (description (text_blob enum)) (description (text_blob  )) (description (text_blob {)) (description (text_blob IDLE)) (description (text_blob ,)) (description (text_blob WRITE)) (description (text_blob ,)) (description (text_blob READ)) (description (text_blob ,)) (description (text_blob DONE)) (description (text_blob })) (description (text_blob  )) (description (text_blob fsm_t)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob fsm_t)) (description (text_blob  )) (description (text_blob state)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob \n)) (description (endmodule endmodule)) (description (text_blob \n)) (description (text_blob \n)) (description (module module)) (description (text_blob  )) (description (text_blob memory_ctrl2)) (description (text_blob  )) (description (text_blob ()) (description (text_blob mem_if)) (description (text_blob .)) (description (text_blob system)) (description (text_blob  )) (description (text_blob sif)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob typedef)) (description (text_blob   )) (description (text_blob enum)) (description (text_blob  )) (description (text_blob {)) (description (text_blob IDLE)) (description (text_blob ,)) (description (text_blob WRITE)) (description (text_blob ,)) (description (text_blob READ)) (description (text_blob ,)) (description (text_blob DONE)) (description (text_blob })) (description (text_blob  )) (description (text_blob fsm_t)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob fsm_t)) (description (text_blob  )) (description (text_blob state)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob DD)) (description (text_blob  )) (description (text_blob t)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (endmodule endmodule)) (description (text_blob \n)) (description (text_blob \n)) (description (text_blob \n))) <EOF>)

AST_DEBUG_BEGIN
Count: 257
LIB: work
FILE: ${SURELOG_DIR}/tests/ModPortTest/top.v
n<> u<256> t<Top_level_rule> c<1> l<1:1> el<56:1>
  n<> u<1> t<Null_rule> p<256> s<255> l<1:1>
  n<> u<255> t<Source_text> p<256> c<46> l<1:1> el<53:10>
    n<> u<46> t<Description> p<255> c<45> s<131> l<1:1> el<5:10>
      n<> u<45> t<Module_declaration> p<46> c<11> l<1:1> el<5:10>
        n<> u<11> t<Module_nonansi_header> p<45> c<2> s<26> l<1:1> el<1:22>
          n<module> u<2> t<Module_keyword> p<11> s<3> l<1:1> el<1:7>
          n<dff0_test> u<3> t<STRING_CONST> p<11> s<10> l<1:8> el<1:17>
          n<> u<10> t<List_of_ports> p<11> c<9> l<1:17> el<1:21>
            n<> u<9> t<Port> p<10> c<8> l<1:18> el<1:20>
              n<> u<8> t<Port_expression> p<9> c<7> l<1:18> el<1:20>
                n<> u<7> t<Port_reference> p<8> c<4> l<1:18> el<1:20>
                  n<n1> u<4> t<STRING_CONST> p<7> s<6> l<1:18> el<1:20>
                  n<> u<6> t<Constant_select> p<7> c<5> l<1:20> el<1:20>
                    n<> u<5> t<Constant_bit_select> p<6> l<1:20> el<1:20>
        n<> u<26> t<Module_item> p<45> c<25> s<43> l<2:3> el<3:13>
          n<> u<25> t<Port_declaration> p<26> c<19> l<2:3> el<3:12>
            n<> u<19> t<Attribute_instance> p<25> c<18> s<24> l<2:3> el<2:21>
              n<> u<18> t<Attr_spec> p<19> c<13> l<2:6> el<2:18>
                n<> u<13> t<Attr_name> p<18> c<12> s<17> l<2:6> el<2:10>
                  n<init> u<12> t<STRING_CONST> p<13> l<2:6> el<2:10>
                n<> u<17> t<Constant_expression> p<18> c<16> l<2:13> el<2:18>
                  n<> u<16> t<Constant_primary> p<17> c<15> l<2:13> el<2:18>
                    n<> u<15> t<Primary_literal> p<16> c<14> l<2:13> el<2:18>
                      n<32'd1> u<14> t<INT_CONST> p<15> l<2:13> el<2:18>
            n<> u<24> t<Output_declaration> p<25> c<21> l<3:3> el<3:12>
              n<> u<21> t<Net_port_type> p<24> c<20> s<23> l<3:10> el<3:10>
                n<> u<20> t<Data_type_or_implicit> p<21> l<3:10> el<3:10>
              n<> u<23> t<List_of_port_identifiers> p<24> c<22> l<3:10> el<3:12>
                n<n1> u<22> t<STRING_CONST> p<23> l<3:10> el<3:12>
        n<> u<43> t<Module_item> p<45> c<42> s<44> l<4:3> el<4:18>
          n<> u<42> t<Non_port_module_item> p<43> c<41> l<4:3> el<4:18>
            n<> u<41> t<Module_or_generate_item> p<42> c<40> l<4:3> el<4:18>
              n<> u<40> t<Module_common_item> p<41> c<39> l<4:3> el<4:18>
                n<> u<39> t<Module_or_generate_item_declaration> p<40> c<38> l<4:3> el<4:18>
                  n<> u<38> t<Package_or_generate_item_declaration> p<39> c<37> l<4:3> el<4:18>
                    n<> u<37> t<Data_declaration> p<38> c<36> l<4:3> el<4:18>
                      n<> u<36> t<Variable_declaration> p<37> c<28> l<4:3> el<4:18>
                        n<> u<28> t<Data_type> p<36> c<27> s<35> l<4:3> el<4:6>
                          n<> u<27> t<IntVec_TypeReg> p<28> l<4:3> el<4:6>
                        n<> u<35> t<List_of_variable_decl_assignments> p<36> c<34> l<4:7> el<4:17>
                          n<> u<34> t<Variable_decl_assignment> p<35> c<29> l<4:7> el<4:17>
                            n<n1> u<29> t<STRING_CONST> p<34> s<33> l<4:7> el<4:9>
                            n<> u<33> t<Expression> p<34> c<32> l<4:12> el<4:17>
                              n<> u<32> t<Primary> p<33> c<31> l<4:12> el<4:17>
                                n<> u<31> t<Primary_literal> p<32> c<30> l<4:12> el<4:17>
                                  n<32'd0> u<30> t<INT_CONST> p<31> l<4:12> el<4:17>
        n<> u<44> t<ENDMODULE> p<45> l<5:1> el<5:10>
    n<> u<131> t<Description> p<255> c<130> s<164> l<8:1> el<26:13>
      n<> u<130> t<Interface_declaration> p<131> c<64> l<8:1> el<26:13>
        n<> u<64> t<Interface_ansi_header> p<130> c<47> s<90> l<8:1> el<10:3>
          n<> u<47> t<INTERFACE> p<64> s<49> l<8:1> el<8:10>
          n<AXI_BUS> u<49> t<Interface_identifier> p<64> c<48> s<63> l<8:11> el<8:18>
            n<AXI_BUS> u<48> t<STRING_CONST> p<49> l<8:11> el<8:18>
          n<> u<63> t<Parameter_port_list> p<64> c<62> l<8:19> el<10:2>
            n<> u<62> t<Parameter_port_declaration> p<63> c<61> l<9:2> el<9:31>
              n<> u<61> t<Parameter_declaration> p<62> c<50> l<9:2> el<9:31>
                n<> u<50> t<Data_type_or_implicit> p<61> s<60> l<9:12> el<9:12>
                n<> u<60> t<List_of_param_assignments> p<61> c<59> l<9:12> el<9:31>
                  n<> u<59> t<Param_assignment> p<60> c<51> l<9:12> el<9:31>
                    n<AXI_ID_WIDTH> u<51> t<STRING_CONST> p<59> s<58> l<9:12> el<9:24>
                    n<> u<58> t<Constant_param_expression> p<59> c<57> l<9:29> el<9:31>
                      n<> u<57> t<Constant_mintypmax_expression> p<58> c<56> l<9:29> el<9:31>
                        n<> u<56> t<Constant_expression> p<57> c<55> l<9:29> el<9:31>
                          n<> u<55> t<Unary_Minus> p<56> s<54> l<9:29> el<9:30>
                          n<> u<54> t<Constant_primary> p<56> c<53> l<9:30> el<9:31>
                            n<> u<53> t<Primary_literal> p<54> c<52> l<9:30> el<9:31>
                              n<1> u<52> t<INT_CONST> p<53> l<9:30> el<9:31>
        n<> u<90> t<Non_port_interface_item> p<130> c<89> s<100> l<12:3> el<12:43>
          n<> u<89> t<Interface_or_generate_item> p<90> c<88> l<12:3> el<12:43>
            n<> u<88> t<Module_common_item> p<89> c<87> l<12:3> el<12:43>
              n<> u<87> t<Module_or_generate_item_declaration> p<88> c<86> l<12:3> el<12:43>
                n<> u<86> t<Package_or_generate_item_declaration> p<87> c<85> l<12:3> el<12:43>
                  n<> u<85> t<Data_declaration> p<86> c<84> l<12:3> el<12:43>
                    n<> u<84> t<Type_declaration> p<85> c<82> l<12:3> el<12:43>
                      n<logic> u<82> t<Data_type> p<84> c<65> s<83> l<12:11> el<12:35>
                        n<logic> u<65> t<STRING_CONST> p<82> s<81> l<12:11> el<12:16>
                        n<> u<81> t<Packed_dimension> p<82> c<80> l<12:17> el<12:35>
                          n<> u<80> t<Constant_range> p<81> c<75> l<12:18> el<12:34>
                            n<> u<75> t<Constant_expression> p<80> c<69> s<79> l<12:18> el<12:32>
                              n<> u<69> t<Constant_expression> p<75> c<68> s<74> l<12:18> el<12:30>
                                n<> u<68> t<Constant_primary> p<69> c<67> l<12:18> el<12:30>
                                  n<> u<67> t<Primary_literal> p<68> c<66> l<12:18> el<12:30>
                                    n<AXI_ID_WIDTH> u<66> t<STRING_CONST> p<67> l<12:18> el<12:30>
                              n<> u<74> t<BinOp_Minus> p<75> s<73> l<12:30> el<12:31>
                              n<> u<73> t<Constant_expression> p<75> c<72> l<12:31> el<12:32>
                                n<> u<72> t<Constant_primary> p<73> c<71> l<12:31> el<12:32>
                                  n<> u<71> t<Primary_literal> p<72> c<70> l<12:31> el<12:32>
                                    n<1> u<70> t<INT_CONST> p<71> l<12:31> el<12:32>
                            n<> u<79> t<Constant_expression> p<80> c<78> l<12:33> el<12:34>
                              n<> u<78> t<Constant_primary> p<79> c<77> l<12:33> el<12:34>
                                n<> u<77> t<Primary_literal> p<78> c<76> l<12:33> el<12:34>
                                  n<0> u<76> t<INT_CONST> p<77> l<12:33> el<12:34>
                      n<id_t> u<83> t<STRING_CONST> p<84> l<12:38> el<12:42>
        n<> u<100> t<Non_port_interface_item> p<130> c<99> s<109> l<14:3> el<14:21>
          n<> u<99> t<Interface_or_generate_item> p<100> c<98> l<14:3> el<14:21>
            n<> u<98> t<Module_common_item> p<99> c<97> l<14:3> el<14:21>
              n<> u<97> t<Module_or_generate_item_declaration> p<98> c<96> l<14:3> el<14:21>
                n<> u<96> t<Package_or_generate_item_declaration> p<97> c<95> l<14:3> el<14:21>
                  n<> u<95> t<Net_declaration> p<96> c<91> l<14:3> el<14:21>
                    n<id_t1> u<91> t<STRING_CONST> p<95> s<94> l<14:3> el<14:8>
                    n<> u<94> t<List_of_net_decl_assignments> p<95> c<93> l<14:15> el<14:20>
                      n<> u<93> t<Net_decl_assignment> p<94> c<92> l<14:15> el<14:20>
                        n<aw_id> u<92> t<STRING_CONST> p<93> l<14:15> el<14:20>
        n<> u<109> t<Non_port_interface_item> p<130> c<108> s<119> l<16:3> el<18:5>
          n<> u<108> t<Interface_or_generate_item> p<109> c<107> l<16:3> el<18:5>
            n<> u<107> t<Modport_item> p<108> c<101> l<16:11> el<18:4>
              n<Master> u<101> t<STRING_CONST> p<107> s<106> l<16:11> el<16:17>
              n<> u<106> t<Modport_ports_declaration> p<107> c<105> l<17:5> el<17:17>
                n<> u<105> t<Modport_simple_ports_declaration> p<106> c<102> l<17:5> el<17:17>
                  n<> u<102> t<PortDir_Out> p<105> s<104> l<17:5> el<17:11>
                  n<> u<104> t<Modport_simple_port> p<105> c<103> l<17:12> el<17:17>
                    n<aw_id> u<103> t<STRING_CONST> p<104> l<17:12> el<17:17>
        n<> u<119> t<Non_port_interface_item> p<130> c<118> s<128> l<20:3> el<20:20>
          n<> u<118> t<Interface_or_generate_item> p<119> c<117> l<20:3> el<20:20>
            n<> u<117> t<Module_common_item> p<118> c<116> l<20:3> el<20:20>
              n<> u<116> t<Module_or_generate_item_declaration> p<117> c<115> l<20:3> el<20:20>
                n<> u<115> t<Package_or_generate_item_declaration> p<116> c<114> l<20:3> el<20:20>
                  n<> u<114> t<Net_declaration> p<115> c<110> l<20:3> el<20:20>
                    n<id_t> u<110> t<STRING_CONST> p<114> s<113> l<20:3> el<20:7>
                    n<> u<113> t<List_of_net_decl_assignments> p<114> c<112> l<20:14> el<20:19>
                      n<> u<112> t<Net_decl_assignment> p<113> c<111> l<20:14> el<20:19>
                        n<rw_id> u<111> t<STRING_CONST> p<112> l<20:14> el<20:19>
        n<> u<128> t<Non_port_interface_item> p<130> c<127> s<129> l<22:3> el<24:5>
          n<> u<127> t<Interface_or_generate_item> p<128> c<126> l<22:3> el<24:5>
            n<> u<126> t<Modport_item> p<127> c<120> l<22:11> el<24:4>
              n<Slave> u<120> t<STRING_CONST> p<126> s<125> l<22:11> el<22:16>
              n<> u<125> t<Modport_ports_declaration> p<126> c<124> l<23:5> el<23:17>
                n<> u<124> t<Modport_simple_ports_declaration> p<125> c<121> l<23:5> el<23:17>
                  n<> u<121> t<PortDir_Out> p<124> s<123> l<23:5> el<23:11>
                  n<> u<123> t<Modport_simple_port> p<124> c<122> l<23:12> el<23:17>
                    n<ww_id> u<122> t<STRING_CONST> p<123> l<23:12> el<23:17>
        n<> u<129> t<ENDINTERFACE> p<130> l<26:1> el<26:13>
    n<> u<164> t<Description> p<255> c<163> s<204> l<29:1> el<34:13>
      n<> u<163> t<Interface_declaration> p<164> c<143> l<29:1> el<34:13>
        n<> u<143> t<Interface_ansi_header> p<163> c<132> s<152> l<29:1> el<29:35>
          n<> u<132> t<INTERFACE> p<143> s<134> l<29:1> el<29:10>
          n<mem_if> u<134> t<Interface_identifier> p<143> c<133> s<142> l<29:11> el<29:17>
            n<mem_if> u<133> t<STRING_CONST> p<134> l<29:11> el<29:17>
          n<> u<142> t<List_of_port_declarations> p<143> c<141> l<29:18> el<29:34>
            n<> u<141> t<Ansi_port_declaration> p<142> c<139> l<29:19> el<29:33>
              n<> u<139> t<Net_port_header> p<141> c<135> s<140> l<29:19> el<29:29>
                n<> u<135> t<PortDir_Inp> p<139> s<138> l<29:19> el<29:24>
                n<> u<138> t<Net_port_type> p<139> c<136> l<29:25> el<29:29>
                  n<> u<136> t<NetType_Wire> p<138> s<137> l<29:25> el<29:29>
                  n<> u<137> t<Data_type_or_implicit> p<138> l<29:30> el<29:30>
              n<clk> u<140> t<STRING_CONST> p<141> l<29:30> el<29:33>
        n<> u<152> t<Non_port_interface_item> p<163> c<151> s<161> l<31:3> el<31:31>
          n<> u<151> t<Interface_or_generate_item> p<152> c<150> l<31:3> el<31:31>
            n<> u<150> t<Modport_item> p<151> c<144> l<31:12> el<31:30>
              n<system> u<144> t<STRING_CONST> p<150> s<149> l<31:12> el<31:18>
              n<> u<149> t<Modport_ports_declaration> p<150> c<148> l<31:20> el<31:29>
                n<> u<148> t<Modport_simple_ports_declaration> p<149> c<145> l<31:20> el<31:29>
                  n<> u<145> t<PortDir_Inp> p<148> s<147> l<31:20> el<31:25>
                  n<> u<147> t<Modport_simple_port> p<148> c<146> l<31:26> el<31:29>
                    n<clk> u<146> t<STRING_CONST> p<147> l<31:26> el<31:29>
        n<> u<161> t<Non_port_interface_item> p<163> c<160> s<162> l<32:3> el<32:32>
          n<> u<160> t<Interface_or_generate_item> p<161> c<159> l<32:3> el<32:32>
            n<> u<159> t<Modport_item> p<160> c<153> l<32:12> el<32:31>
              n<memory> u<153> t<STRING_CONST> p<159> s<158> l<32:12> el<32:18>
              n<> u<158> t<Modport_ports_declaration> p<159> c<157> l<32:20> el<32:30>
                n<> u<157> t<Modport_simple_ports_declaration> p<158> c<154> l<32:20> el<32:30>
                  n<> u<154> t<PortDir_Out> p<157> s<156> l<32:20> el<32:26>
                  n<> u<156> t<Modport_simple_port> p<157> c<155> l<32:27> el<32:30>
                    n<clk> u<155> t<STRING_CONST> p<156> l<32:27> el<32:30>
        n<> u<162> t<ENDINTERFACE> p<163> l<34:1> el<34:13>
    n<> u<204> t<Description> p<255> c<203> s<254> l<36:1> el<43:10>
      n<> u<203> t<Module_declaration> p<204> c<174> l<36:1> el<43:10>
        n<> u<174> t<Module_ansi_header> p<203> c<165> s<191> l<36:1> el<36:42>
          n<module> u<165> t<Module_keyword> p<174> s<166> l<36:1> el<36:7>
          n<memory_ctrl1> u<166> t<STRING_CONST> p<174> s<173> l<36:8> el<36:20>
          n<> u<173> t<List_of_port_declarations> p<174> c<172> l<36:21> el<36:41>
            n<> u<172> t<Ansi_port_declaration> p<173> c<170> l<36:22> el<36:40>
              n<> u<170> t<Interface_port_header> p<172> c<169> s<171> l<36:22> el<36:36>
                n<mem_if.system1> u<169> t<Interface_identifier> p<170> c<167> l<36:22> el<36:36>
                  n<mem_if> u<167> t<STRING_CONST> p<169> s<168> l<36:22> el<36:28>
                  n<system1> u<168> t<STRING_CONST> p<169> l<36:29> el<36:36>
              n<sif> u<171> t<STRING_CONST> p<172> l<36:37> el<36:40>
        n<> u<191> t<Non_port_module_item> p<203> c<190> s<201> l<38:1> el<38:44>
          n<> u<190> t<Module_or_generate_item> p<191> c<189> l<38:1> el<38:44>
            n<> u<189> t<Module_common_item> p<190> c<188> l<38:1> el<38:44>
              n<> u<188> t<Module_or_generate_item_declaration> p<189> c<187> l<38:1> el<38:44>
                n<> u<187> t<Package_or_generate_item_declaration> p<188> c<186> l<38:1> el<38:44>
                  n<> u<186> t<Data_declaration> p<187> c<185> l<38:1> el<38:44>
                    n<> u<185> t<Type_declaration> p<186> c<183> l<38:1> el<38:44>
                      n<> u<183> t<Data_type> p<185> c<176> s<184> l<38:10> el<38:37>
                        n<> u<176> t<Enum_name_declaration> p<183> c<175> s<178> l<38:16> el<38:20>
                          n<IDLE> u<175> t<STRING_CONST> p<176> l<38:16> el<38:20>
                        n<> u<178> t<Enum_name_declaration> p<183> c<177> s<180> l<38:21> el<38:26>
                          n<WRITE> u<177> t<STRING_CONST> p<178> l<38:21> el<38:26>
                        n<> u<180> t<Enum_name_declaration> p<183> c<179> s<182> l<38:27> el<38:31>
                          n<READ> u<179> t<STRING_CONST> p<180> l<38:27> el<38:31>
                        n<> u<182> t<Enum_name_declaration> p<183> c<181> l<38:32> el<38:36>
                          n<DONE> u<181> t<STRING_CONST> p<182> l<38:32> el<38:36>
                      n<fsm_t> u<184> t<STRING_CONST> p<185> l<38:38> el<38:43>
        n<> u<201> t<Non_port_module_item> p<203> c<200> s<202> l<40:1> el<40:13>
          n<> u<200> t<Module_or_generate_item> p<201> c<199> l<40:1> el<40:13>
            n<> u<199> t<Module_common_item> p<200> c<198> l<40:1> el<40:13>
              n<> u<198> t<Module_or_generate_item_declaration> p<199> c<197> l<40:1> el<40:13>
                n<> u<197> t<Package_or_generate_item_declaration> p<198> c<196> l<40:1> el<40:13>
                  n<> u<196> t<Net_declaration> p<197> c<192> l<40:1> el<40:13>
                    n<fsm_t> u<192> t<STRING_CONST> p<196> s<195> l<40:1> el<40:6>
                    n<> u<195> t<List_of_net_decl_assignments> p<196> c<194> l<40:7> el<40:12>
                      n<> u<194> t<Net_decl_assignment> p<195> c<193> l<40:7> el<40:12>
                        n<state> u<193> t<STRING_CONST> p<194> l<40:7> el<40:12>
        n<> u<202> t<ENDMODULE> p<203> l<43:1> el<43:10>
    n<> u<254> t<Description> p<255> c<253> l<45:1> el<53:10>
      n<> u<253> t<Module_declaration> p<254> c<214> l<45:1> el<53:10>
        n<> u<214> t<Module_ansi_header> p<253> c<205> s<231> l<45:1> el<45:41>
          n<module> u<205> t<Module_keyword> p<214> s<206> l<45:1> el<45:7>
          n<memory_ctrl2> u<206> t<STRING_CONST> p<214> s<213> l<45:8> el<45:20>
          n<> u<213> t<List_of_port_declarations> p<214> c<212> l<45:21> el<45:40>
            n<> u<212> t<Ansi_port_declaration> p<213> c<210> l<45:22> el<45:39>
              n<> u<210> t<Interface_port_header> p<212> c<209> s<211> l<45:22> el<45:35>
                n<mem_if.system> u<209> t<Interface_identifier> p<210> c<207> l<45:22> el<45:35>
                  n<mem_if> u<207> t<STRING_CONST> p<209> s<208> l<45:22> el<45:28>
                  n<system> u<208> t<STRING_CONST> p<209> l<45:29> el<45:35>
              n<sif> u<211> t<STRING_CONST> p<212> l<45:36> el<45:39>
        n<> u<231> t<Non_port_module_item> p<253> c<230> s<241> l<47:1> el<47:44>
          n<> u<230> t<Module_or_generate_item> p<231> c<229> l<47:1> el<47:44>
            n<> u<229> t<Module_common_item> p<230> c<228> l<47:1> el<47:44>
              n<> u<228> t<Module_or_generate_item_declaration> p<229> c<227> l<47:1> el<47:44>
                n<> u<227> t<Package_or_generate_item_declaration> p<228> c<226> l<47:1> el<47:44>
                  n<> u<226> t<Data_declaration> p<227> c<225> l<47:1> el<47:44>
                    n<> u<225> t<Type_declaration> p<226> c<223> l<47:1> el<47:44>
                      n<> u<223> t<Data_type> p<225> c<216> s<224> l<47:10> el<47:37>
                        n<> u<216> t<Enum_name_declaration> p<223> c<215> s<218> l<47:16> el<47:20>
                          n<IDLE> u<215> t<STRING_CONST> p<216> l<47:16> el<47:20>
                        n<> u<218> t<Enum_name_declaration> p<223> c<217> s<220> l<47:21> el<47:26>
                          n<WRITE> u<217> t<STRING_CONST> p<218> l<47:21> el<47:26>
                        n<> u<220> t<Enum_name_declaration> p<223> c<219> s<222> l<47:27> el<47:31>
                          n<READ> u<219> t<STRING_CONST> p<220> l<47:27> el<47:31>
                        n<> u<222> t<Enum_name_declaration> p<223> c<221> l<47:32> el<47:36>
                          n<DONE> u<221> t<STRING_CONST> p<222> l<47:32> el<47:36>
                      n<fsm_t> u<224> t<STRING_CONST> p<225> l<47:38> el<47:43>
        n<> u<241> t<Non_port_module_item> p<253> c<240> s<251> l<49:1> el<49:13>
          n<> u<240> t<Module_or_generate_item> p<241> c<239> l<49:1> el<49:13>
            n<> u<239> t<Module_common_item> p<240> c<238> l<49:1> el<49:13>
              n<> u<238> t<Module_or_generate_item_declaration> p<239> c<237> l<49:1> el<49:13>
                n<> u<237> t<Package_or_generate_item_declaration> p<238> c<236> l<49:1> el<49:13>
                  n<> u<236> t<Net_declaration> p<237> c<232> l<49:1> el<49:13>
                    n<fsm_t> u<232> t<STRING_CONST> p<236> s<235> l<49:1> el<49:6>
                    n<> u<235> t<List_of_net_decl_assignments> p<236> c<234> l<49:7> el<49:12>
                      n<> u<234> t<Net_decl_assignment> p<235> c<233> l<49:7> el<49:12>
                        n<state> u<233> t<STRING_CONST> p<234> l<49:7> el<49:12>
        n<> u<251> t<Non_port_module_item> p<253> c<250> s<252> l<51:1> el<51:6>
          n<> u<250> t<Module_or_generate_item> p<251> c<249> l<51:1> el<51:6>
            n<> u<249> t<Module_common_item> p<250> c<248> l<51:1> el<51:6>
              n<> u<248> t<Module_or_generate_item_declaration> p<249> c<247> l<51:1> el<51:6>
                n<> u<247> t<Package_or_generate_item_declaration> p<248> c<246> l<51:1> el<51:6>
                  n<> u<246> t<Net_declaration> p<247> c<242> l<51:1> el<51:6>
                    n<DD> u<242> t<STRING_CONST> p<246> s<245> l<51:1> el<51:3>
                    n<> u<245> t<List_of_net_decl_assignments> p<246> c<244> l<51:4> el<51:5>
                      n<> u<244> t<Net_decl_assignment> p<245> c<243> l<51:4> el<51:5>
                        n<t> u<243> t<STRING_CONST> p<244> l<51:4> el<51:5>
        n<> u<252> t<ENDMODULE> p<253> l<53:1> el<53:10>
AST_DEBUG_END
[WRN:PA0205] ${SURELOG_DIR}/tests/ModPortTest/top.v:1:1: No timescale set for "dff0_test".
[WRN:PA0205] ${SURELOG_DIR}/tests/ModPortTest/top.v:8:1: No timescale set for "AXI_BUS".
[WRN:PA0205] ${SURELOG_DIR}/tests/ModPortTest/top.v:29:1: No timescale set for "mem_if".
[WRN:PA0205] ${SURELOG_DIR}/tests/ModPortTest/top.v:36:1: No timescale set for "memory_ctrl1".
[WRN:PA0205] ${SURELOG_DIR}/tests/ModPortTest/top.v:45:1: No timescale set for "memory_ctrl2".
[INF:CP0300] Compilation...
[INF:CP0304] ${SURELOG_DIR}/tests/ModPortTest/top.v:8:1: Compile interface "work@AXI_BUS".
[INF:CP0303] ${SURELOG_DIR}/tests/ModPortTest/top.v:1:1: Compile module "work@dff0_test".
[INF:CP0304] ${SURELOG_DIR}/tests/ModPortTest/top.v:29:1: Compile interface "work@mem_if".
[INF:CP0303] ${SURELOG_DIR}/tests/ModPortTest/top.v:36:1: Compile module "work@memory_ctrl1".
[INF:CP0303] ${SURELOG_DIR}/tests/ModPortTest/top.v:45:1: Compile module "work@memory_ctrl2".
[ERR:CP0311] ${SURELOG_DIR}/tests/ModPortTest/top.v:23:12: Undefined net used in modport: "ww_id".
[INF:UH0706] Creating UHDM Model...
=== UHDM Object Stats Begin (Non-Elaborated Model) ===
Attribute                                              2
Constant                                               6
Design                                                 1
EnumConst                                              8
EnumNet                                                2
EnumTypespec                                           2
IODecl                                                 4
Interface                                              2
InterfaceTypespec                                      6
LogicNet                                               6
LogicTypespec                                          4
LogicVar                                               3
Modport                                                4
Module                                                 4
Operation                                              2
ParamAssign                                            1
Parameter                                              1
Port                                                   4
Range                                                  1
RefObj                                                 2
RefTypespec                                           15
TypedefTypespec                                        3
UnsupportedTypespec                                    3
=== UHDM Object Stats End ===
[INF:UH0708] Writing UHDM DB: ${SURELOG_DIR}/build/regression/ModPortTest/slpp_unit/surelog.uhdm ...
[INF:UH0711] Decompiling UHDM...
====== UHDM =======
Design: (unnamed)
|vpiName:unnamed
|vpiAllInterfaces:
\_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
  |vpiParent:
  \_Design: (unnamed)
  |vpiName:work@AXI_BUS
  |vpiVariables:
  \_LogicVar: (work@AXI_BUS.aw_id), line:14:15, endln:14:20
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiTypespec:
    \_RefTypespec: (work@AXI_BUS.aw_id.id_t1), line:14:3, endln:14:8
      |vpiParent:
      \_LogicVar: (work@AXI_BUS.aw_id), line:14:15, endln:14:20
      |vpiName:id_t1
      |vpiFullName:work@AXI_BUS.aw_id.id_t1
      |vpiActual:
      \_UnsupportedTypespec: (id_t1), line:14:3, endln:14:8
    |vpiName:aw_id
    |vpiFullName:work@AXI_BUS.aw_id
    |vpiRandType:1
    |vpiVisibility:1
  |vpiVariables:
  \_LogicVar: (work@AXI_BUS.rw_id), line:20:14, endln:20:19
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiTypespec:
    \_RefTypespec: (work@AXI_BUS.rw_id.id_t), line:20:3, endln:20:7
      |vpiParent:
      \_LogicVar: (work@AXI_BUS.rw_id), line:20:14, endln:20:19
      |vpiName:id_t
      |vpiFullName:work@AXI_BUS.rw_id.id_t
      |vpiActual:
      \_TypedefTypespec: (id_t), line:12:38, endln:12:42
    |vpiName:rw_id
    |vpiFullName:work@AXI_BUS.rw_id
    |vpiRandType:1
    |vpiVisibility:1
  |vpiReg:
  \_LogicVar: (work@AXI_BUS.aw_id), line:14:15, endln:14:20
  |vpiReg:
  \_LogicVar: (work@AXI_BUS.rw_id), line:20:14, endln:20:19
  |vpiParameter:
  \_Parameter: (work@AXI_BUS.AXI_ID_WIDTH), line:9:12, endln:9:31
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiName:AXI_ID_WIDTH
    |vpiFullName:work@AXI_BUS.AXI_ID_WIDTH
  |vpiParamAssign:
  \_ParamAssign: , line:9:12, endln:9:31
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiRhs:
    \_Operation: , line:9:29, endln:9:31
      |vpiParent:
      \_ParamAssign: , line:9:12, endln:9:31
      |vpiOpType:1
      |vpiOperand:
      \_Constant: , line:9:30, endln:9:31
        |vpiParent:
        \_Operation: , line:9:29, endln:9:31
        |vpiDecompile:1
        |vpiSize:64
        |UINT:1
        |vpiConstType:9
    |vpiLhs:
    \_Parameter: (work@AXI_BUS.AXI_ID_WIDTH), line:9:12, endln:9:31
  |vpiTypedef:
  \_TypedefTypespec: (id_t), line:12:38, endln:12:42
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiInstance:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiName:id_t
    |vpiTypedefAlias:
    \_RefTypespec: (work@AXI_BUS.id_t), line:12:11, endln:12:16
      |vpiParent:
      \_TypedefTypespec: (id_t), line:12:38, endln:12:42
      |vpiFullName:work@AXI_BUS.id_t
      |vpiActual:
      \_LogicTypespec: , line:12:11, endln:12:35
  |vpiTypedef:
  \_LogicTypespec: , line:12:11, endln:12:35
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiRange:
    \_Range: , line:12:17, endln:12:35
      |vpiParent:
      \_LogicTypespec: , line:12:11, endln:12:35
      |vpiLeftRange:
      \_Operation: , line:12:18, endln:12:32
        |vpiParent:
        \_Range: , line:12:17, endln:12:35
        |vpiOpType:11
        |vpiOperand:
        \_RefObj: (work@AXI_BUS.AXI_ID_WIDTH), line:12:18, endln:12:30
          |vpiParent:
          \_Operation: , line:12:18, endln:12:32
          |vpiName:AXI_ID_WIDTH
          |vpiFullName:work@AXI_BUS.AXI_ID_WIDTH
          |vpiActual:
          \_Parameter: (work@AXI_BUS.AXI_ID_WIDTH), line:9:12, endln:9:31
        |vpiOperand:
        \_Constant: , line:12:31, endln:12:32
          |vpiParent:
          \_Operation: , line:12:18, endln:12:32
          |vpiDecompile:1
          |vpiSize:64
          |UINT:1
          |vpiConstType:9
      |vpiRightRange:
      \_Constant: , line:12:33, endln:12:34
        |vpiParent:
        \_Range: , line:12:17, endln:12:35
        |vpiDecompile:0
        |vpiSize:64
        |UINT:0
        |vpiConstType:9
  |vpiTypedef:
  \_UnsupportedTypespec: (id_t1), line:14:3, endln:14:8
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiName:id_t1
  |vpiTypedef:
  \_UnsupportedTypespec: (id_t1), line:14:3, endln:14:8
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiName:id_t1
  |vpiImportTypespec:
  \_TypedefTypespec: (id_t), line:12:38, endln:12:42
  |vpiImportTypespec:
  \_LogicTypespec: , line:12:11, endln:12:35
  |vpiImportTypespec:
  \_UnsupportedTypespec: (id_t1), line:14:3, endln:14:8
  |vpiImportTypespec:
  \_LogicVar: (work@AXI_BUS.aw_id), line:14:15, endln:14:20
  |vpiImportTypespec:
  \_LogicVar: (work@AXI_BUS.rw_id), line:20:14, endln:20:19
  |vpiImportTypespec:
  \_UnsupportedTypespec: (id_t1), line:14:3, endln:14:8
  |vpiImportTypespec:
  \_LogicNet: (work@AXI_BUS.aw_id), line:14:15, endln:14:20
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiTypespec:
    \_RefTypespec: (work@AXI_BUS.aw_id.id_t1), line:14:3, endln:14:8
      |vpiParent:
      \_LogicNet: (work@AXI_BUS.aw_id), line:14:15, endln:14:20
      |vpiName:id_t1
      |vpiFullName:work@AXI_BUS.aw_id.id_t1
      |vpiActual:
      \_UnsupportedTypespec: (id_t1), line:14:3, endln:14:8
    |vpiName:aw_id
    |vpiFullName:work@AXI_BUS.aw_id
  |vpiImportTypespec:
  \_LogicNet: (work@AXI_BUS.rw_id), line:20:14, endln:20:19
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiTypespec:
    \_RefTypespec: (work@AXI_BUS.rw_id.id_t), line:20:3, endln:20:7
      |vpiParent:
      \_LogicNet: (work@AXI_BUS.rw_id), line:20:14, endln:20:19
      |vpiName:id_t
      |vpiFullName:work@AXI_BUS.rw_id.id_t
      |vpiActual:
      \_TypedefTypespec: (id_t), line:12:38, endln:12:42
    |vpiName:rw_id
    |vpiFullName:work@AXI_BUS.rw_id
  |vpiDefName:work@AXI_BUS
  |vpiNet:
  \_LogicNet: (work@AXI_BUS.aw_id), line:14:15, endln:14:20
  |vpiNet:
  \_LogicNet: (work@AXI_BUS.rw_id), line:20:14, endln:20:19
  |vpiModport:
  \_Modport: (Master), line:16:11, endln:16:17
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiName:Master
  |vpiModport:
  \_Modport: (Slave), line:22:11, endln:22:16
    |vpiParent:
    \_Interface: work@AXI_BUS (work@AXI_BUS), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:8:1, endln:26:13
    |vpiName:Slave
|vpiAllInterfaces:
\_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
  |vpiParent:
  \_Design: (unnamed)
  |vpiName:work@mem_if
  |vpiVariables:
  \_LogicVar: (work@mem_if.clk), line:29:30, endln:29:33
    |vpiParent:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
    |vpiTypespec:
    \_RefTypespec: (work@mem_if.clk), line:29:25, endln:29:29
      |vpiParent:
      \_LogicVar: (work@mem_if.clk), line:29:30, endln:29:33
      |vpiFullName:work@mem_if.clk
      |vpiActual:
      \_LogicTypespec: , line:29:25, endln:29:29
    |vpiName:clk
    |vpiFullName:work@mem_if.clk
    |vpiRandType:1
    |vpiVisibility:1
  |vpiReg:
  \_LogicVar: (work@mem_if.clk), line:29:30, endln:29:33
  |vpiTypedef:
  \_LogicTypespec: , line:29:25, endln:29:29
    |vpiParent:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
  |vpiTypedef:
  \_LogicTypespec: , line:29:25, endln:29:29
    |vpiParent:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
  |vpiImportTypespec:
  \_LogicTypespec: , line:29:25, endln:29:29
  |vpiImportTypespec:
  \_LogicVar: (work@mem_if.clk), line:29:30, endln:29:33
  |vpiImportTypespec:
  \_LogicTypespec: , line:29:25, endln:29:29
  |vpiImportTypespec:
  \_LogicNet: (work@mem_if.clk), line:29:30, endln:29:33
    |vpiParent:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
    |vpiName:clk
    |vpiFullName:work@mem_if.clk
    |vpiNetType:1
  |vpiDefName:work@mem_if
  |vpiNet:
  \_LogicNet: (work@mem_if.clk), line:29:30, endln:29:33
  |vpiModport:
  \_Modport: (memory), line:32:12, endln:32:18
    |vpiParent:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
    |vpiName:memory
  |vpiModport:
  \_Modport: (system), line:31:12, endln:31:18
    |vpiParent:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
    |vpiName:system
  |vpiPort:
  \_Port: (clk), line:29:30, endln:29:33
    |vpiParent:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
    |vpiName:clk
    |vpiDirection:1
    |vpiLowConn:
    \_RefObj: (work@mem_if.clk.clk), line:29:30, endln:29:33
      |vpiParent:
      \_Port: (clk), line:29:30, endln:29:33
      |vpiName:clk
      |vpiFullName:work@mem_if.clk.clk
      |vpiActual:
      \_LogicNet: (work@mem_if.clk), line:29:30, endln:29:33
    |vpiTypespec:
    \_RefTypespec: (work@mem_if.clk), line:29:25, endln:29:29
      |vpiParent:
      \_Port: (clk), line:29:30, endln:29:33
      |vpiFullName:work@mem_if.clk
      |vpiActual:
      \_LogicTypespec: , line:29:25, endln:29:29
|vpiAllModules:
\_Module: work@dff0_test (work@dff0_test), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:1:1, endln:5:10
  |vpiParent:
  \_Design: (unnamed)
  |vpiName:work@dff0_test
  |vpiTypedef:
  \_LogicTypespec: , line:4:3, endln:4:6
    |vpiParent:
    \_Module: work@dff0_test (work@dff0_test), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:1:1, endln:5:10
  |vpiImportTypespec:
  \_LogicNet: (work@dff0_test.n1), line:1:18, endln:1:20
    |vpiParent:
    \_Module: work@dff0_test (work@dff0_test), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:1:1, endln:5:10
    |vpiAttribute:
    \_Attribute: (init), line:2:6, endln:2:18
      |vpiParent:
      \_LogicNet: (work@dff0_test.n1), line:1:18, endln:1:20
      |vpiName:init
      |DEC:1
    |vpiName:n1
    |vpiFullName:work@dff0_test.n1
    |vpiNetType:48
  |vpiImportTypespec:
  \_LogicTypespec: , line:4:3, endln:4:6
  |vpiImportTypespec:
  \_LogicNet: (work@dff0_test.n1), line:4:7, endln:4:9
    |vpiParent:
    \_Module: work@dff0_test (work@dff0_test), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:1:1, endln:5:10
    |vpiTypespec:
    \_RefTypespec: (work@dff0_test.n1), line:4:3, endln:4:6
      |vpiParent:
      \_LogicNet: (work@dff0_test.n1), line:4:7, endln:4:9
      |vpiFullName:work@dff0_test.n1
      |vpiActual:
      \_LogicTypespec: , line:4:3, endln:4:6
    |vpiName:n1
    |vpiFullName:work@dff0_test.n1
    |vpiNetType:48
  |vpiDefName:work@dff0_test
  |vpiNet:
  \_LogicNet: (work@dff0_test.n1), line:1:18, endln:1:20
  |vpiNet:
  \_LogicNet: (work@dff0_test.n1), line:4:7, endln:4:9
  |vpiPort:
  \_Port: (n1), line:1:18, endln:1:20
    |vpiParent:
    \_Module: work@dff0_test (work@dff0_test), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:1:1, endln:5:10
    |vpiName:n1
    |vpiDirection:2
    |vpiAttribute:
    \_Attribute: (init), line:2:6, endln:2:18
|vpiAllModules:
\_Module: work@memory_ctrl1 (work@memory_ctrl1), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:36:1, endln:43:10
  |vpiParent:
  \_Design: (unnamed)
  |vpiName:work@memory_ctrl1
  |vpiTypedef:
  \_EnumTypespec: , line:38:10, endln:38:43
    |vpiParent:
    \_Module: work@memory_ctrl1 (work@memory_ctrl1), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:36:1, endln:43:10
    |vpiEnumConst:
    \_EnumConst: (IDLE), line:38:16, endln:38:20
      |vpiParent:
      \_EnumTypespec: , line:38:10, endln:38:43
      |vpiName:IDLE
      |INT:0
      |vpiDecompile:0
      |vpiSize:64
    |vpiEnumConst:
    \_EnumConst: (WRITE), line:38:21, endln:38:26
      |vpiParent:
      \_EnumTypespec: , line:38:10, endln:38:43
      |vpiName:WRITE
      |INT:1
      |vpiDecompile:1
      |vpiSize:64
    |vpiEnumConst:
    \_EnumConst: (READ), line:38:27, endln:38:31
      |vpiParent:
      \_EnumTypespec: , line:38:10, endln:38:43
      |vpiName:READ
      |INT:2
      |vpiDecompile:2
      |vpiSize:64
    |vpiEnumConst:
    \_EnumConst: (DONE), line:38:32, endln:38:36
      |vpiParent:
      \_EnumTypespec: , line:38:10, endln:38:43
      |vpiName:DONE
      |INT:3
      |vpiDecompile:3
      |vpiSize:64
  |vpiTypedef:
  \_TypedefTypespec: (fsm_t), line:38:38, endln:38:43
    |vpiParent:
    \_Module: work@memory_ctrl1 (work@memory_ctrl1), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:36:1, endln:43:10
    |vpiName:fsm_t
    |vpiTypedefAlias:
    \_RefTypespec: (work@memory_ctrl1.fsm_t), line:38:10, endln:38:37
      |vpiParent:
      \_TypedefTypespec: (fsm_t), line:38:38, endln:38:43
      |vpiFullName:work@memory_ctrl1.fsm_t
      |vpiActual:
      \_EnumTypespec: , line:38:10, endln:38:43
  |vpiTypedef:
  \_InterfaceTypespec: (mem_if), line:36:22, endln:36:28
    |vpiParent:
    \_Module: work@memory_ctrl1 (work@memory_ctrl1), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:36:1, endln:43:10
    |vpiName:mem_if
    |vpiInterface:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
  |vpiTypedef:
  \_InterfaceTypespec: (mem_if), line:36:22, endln:36:28
    |vpiParent:
    \_Module: work@memory_ctrl1 (work@memory_ctrl1), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:36:1, endln:43:10
    |vpiName:mem_if
    |vpiInterface:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
  |vpiImportTypespec:
  \_EnumTypespec: , line:38:10, endln:38:43
  |vpiImportTypespec:
  \_TypedefTypespec: (fsm_t), line:38:38, endln:38:43
  |vpiImportTypespec:
  \_EnumNet: (work@memory_ctrl1.state), line:40:7, endln:40:12
    |vpiParent:
    \_Module: work@memory_ctrl1 (work@memory_ctrl1), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:36:1, endln:43:10
    |vpiTypespec:
    \_RefTypespec: (work@memory_ctrl1.state.fsm_t), line:40:1, endln:40:6
      |vpiParent:
      \_EnumNet: (work@memory_ctrl1.state), line:40:7, endln:40:12
      |vpiName:fsm_t
      |vpiFullName:work@memory_ctrl1.state.fsm_t
      |vpiActual:
      \_TypedefTypespec: (fsm_t), line:38:38, endln:38:43
    |vpiName:state
    |vpiFullName:work@memory_ctrl1.state
  |vpiImportTypespec:
  \_InterfaceTypespec: (mem_if), line:36:22, endln:36:28
  |vpiImportTypespec:
  \_InterfaceTypespec: (mem_if), line:36:22, endln:36:28
  |vpiDefName:work@memory_ctrl1
  |vpiNet:
  \_EnumNet: (work@memory_ctrl1.state), line:40:7, endln:40:12
  |vpiPort:
  \_Port: (sif), line:36:37, endln:36:40
    |vpiParent:
    \_Module: work@memory_ctrl1 (work@memory_ctrl1), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:36:1, endln:43:10
    |vpiName:sif
    |vpiDirection:3
    |vpiTypespec:
    \_RefTypespec: (work@memory_ctrl1.sif.mem_if), line:36:22, endln:36:28
      |vpiParent:
      \_Port: (sif), line:36:37, endln:36:40
      |vpiName:mem_if
      |vpiFullName:work@memory_ctrl1.sif.mem_if
      |vpiActual:
      \_InterfaceTypespec: (mem_if), line:36:22, endln:36:28
|vpiAllModules:
\_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
  |vpiParent:
  \_Design: (unnamed)
  |vpiName:work@memory_ctrl2
  |vpiTypedef:
  \_EnumTypespec: , line:47:10, endln:47:43
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiEnumConst:
    \_EnumConst: (IDLE), line:47:16, endln:47:20
      |vpiParent:
      \_EnumTypespec: , line:47:10, endln:47:43
      |vpiName:IDLE
      |INT:0
      |vpiDecompile:0
      |vpiSize:64
    |vpiEnumConst:
    \_EnumConst: (WRITE), line:47:21, endln:47:26
      |vpiParent:
      \_EnumTypespec: , line:47:10, endln:47:43
      |vpiName:WRITE
      |INT:1
      |vpiDecompile:1
      |vpiSize:64
    |vpiEnumConst:
    \_EnumConst: (READ), line:47:27, endln:47:31
      |vpiParent:
      \_EnumTypespec: , line:47:10, endln:47:43
      |vpiName:READ
      |INT:2
      |vpiDecompile:2
      |vpiSize:64
    |vpiEnumConst:
    \_EnumConst: (DONE), line:47:32, endln:47:36
      |vpiParent:
      \_EnumTypespec: , line:47:10, endln:47:43
      |vpiName:DONE
      |INT:3
      |vpiDecompile:3
      |vpiSize:64
  |vpiTypedef:
  \_TypedefTypespec: (fsm_t), line:47:38, endln:47:43
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiName:fsm_t
    |vpiTypedefAlias:
    \_RefTypespec: (work@memory_ctrl2.fsm_t), line:47:10, endln:47:37
      |vpiParent:
      \_TypedefTypespec: (fsm_t), line:47:38, endln:47:43
      |vpiFullName:work@memory_ctrl2.fsm_t
      |vpiActual:
      \_EnumTypespec: , line:47:10, endln:47:43
  |vpiTypedef:
  \_UnsupportedTypespec: (DD), line:51:1, endln:51:3
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiName:DD
  |vpiTypedef:
  \_InterfaceTypespec: (system), line:45:29, endln:45:35
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiName:system
    |vpiIsModPort:1
    |vpiInterface:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
  |vpiTypedef:
  \_InterfaceTypespec: (system), line:45:29, endln:45:35
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiName:system
    |vpiIsModPort:1
    |vpiInterface:
    \_Interface: work@mem_if (work@mem_if), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:29:1, endln:34:13
  |vpiImportTypespec:
  \_EnumTypespec: , line:47:10, endln:47:43
  |vpiImportTypespec:
  \_TypedefTypespec: (fsm_t), line:47:38, endln:47:43
  |vpiImportTypespec:
  \_EnumNet: (work@memory_ctrl2.state), line:49:7, endln:49:12
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiTypespec:
    \_RefTypespec: (work@memory_ctrl2.state.fsm_t), line:49:1, endln:49:6
      |vpiParent:
      \_EnumNet: (work@memory_ctrl2.state), line:49:7, endln:49:12
      |vpiName:fsm_t
      |vpiFullName:work@memory_ctrl2.state.fsm_t
      |vpiActual:
      \_TypedefTypespec: (fsm_t), line:47:38, endln:47:43
    |vpiName:state
    |vpiFullName:work@memory_ctrl2.state
  |vpiImportTypespec:
  \_UnsupportedTypespec: (DD), line:51:1, endln:51:3
  |vpiImportTypespec:
  \_LogicNet: (work@memory_ctrl2.t), line:51:4, endln:51:5
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiTypespec:
    \_RefTypespec: (work@memory_ctrl2.t.DD), line:51:1, endln:51:3
      |vpiParent:
      \_LogicNet: (work@memory_ctrl2.t), line:51:4, endln:51:5
      |vpiName:DD
      |vpiFullName:work@memory_ctrl2.t.DD
      |vpiActual:
      \_UnsupportedTypespec: (DD), line:51:1, endln:51:3
    |vpiName:t
    |vpiFullName:work@memory_ctrl2.t
  |vpiImportTypespec:
  \_InterfaceTypespec: (system), line:45:29, endln:45:35
  |vpiImportTypespec:
  \_InterfaceTypespec: (system), line:45:29, endln:45:35
  |vpiDefName:work@memory_ctrl2
  |vpiNet:
  \_EnumNet: (work@memory_ctrl2.state), line:49:7, endln:49:12
  |vpiNet:
  \_LogicNet: (work@memory_ctrl2.t), line:51:4, endln:51:5
  |vpiPort:
  \_Port: (sif), line:45:36, endln:45:39
    |vpiParent:
    \_Module: work@memory_ctrl2 (work@memory_ctrl2), file:${SURELOG_DIR}/tests/ModPortTest/top.v, line:45:1, endln:53:10
    |vpiName:sif
    |vpiDirection:3
    |vpiTypespec:
    \_RefTypespec: (work@memory_ctrl2.sif.system), line:45:22, endln:45:28
      |vpiParent:
      \_Port: (sif), line:45:36, endln:45:39
      |vpiName:system
      |vpiFullName:work@memory_ctrl2.sif.system
      |vpiActual:
      \_InterfaceTypespec: (system), line:45:29, endln:45:35
===================
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 1
[WARNING] : 5
[   NOTE] : 0
